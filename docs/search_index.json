[["the-pool-of-tears.html", "Cours dAnalyse de Données avec R Chapter 1 The pool of tears", " Cours dAnalyse de Données avec R Priestley 2022-04-21 Chapter 1 The pool of tears "],["premier-travail-avec-les-donnees.html", "Chapter 2 PREMIER TRAVAIL AVEC LES DONNEES 2.1 Regrouper les commandes dans des scripts 2.2 Tableaux de données", " Chapter 2 PREMIER TRAVAIL AVEC LES DONNEES 2.1 Regrouper les commandes dans des scripts Jusquà maintenant nous avons utilisé uniquement la console pour communiquer avec R via linvite de commandes. Le principal problème de ce mode dinteraction est quune fois quune commande est tapée, elle est pour ainsi dire « perdue », cest-à-dire quon doit la saisir à nouveau si on veut lexécuter une seconde fois. Lutilisation de la console est donc restreinte aux petites commandes « jetables », le plus souvent utilisées comme test. La plupart du temps, les commandes seront stockées dans un fichier à part, que lon pourra facilement ouvrir, éditer et exécuter en tout ou partie si besoin. On appelle en général ce type de fichier un script. Pour comprendre comment cela fonctionne, dans RStudio cliquez sur licône en haut à gauche représentant un fichier avec un signe plus vert, puis choisissez R script. Un nouvel onglet apparaît dans le quadrant supérieur gauche. Nous pouvons désormais y saisir des commandes. Par exemple, tapez sur la première ligne la commande suivante : 2 + 2. Ensuite, cliquez sur licône Run (en haut à droite de longlet du script) ou bien pressez simulatément les touches CTRL et Entrée. Les lignes suivantes ont dû faire leur apparition dans la console : 2+2 ## [1] 4 Voici donc comment soumettre rapidement à R les commandes saisies dans votre fichier. Vous pouvez désormais lenregistrer, louvrir plus tard, et en exécuter tout ou partie. À noter que vous avez plusieurs possibilités pour soumettre des commandes à R : vous pouvez exécuter la ligne sur laquelle se trouve votre curseur en cliquant sur Run ou en pressant simulatément les touches CTRL et Entrée ; vous pouvez sélectionner plusieurs lignes contenant des commandes et les exécuter toutes en une seule fois exactement de la même manière ; vous pouvez exécuter dun coup lintégralité de votre fichier en cliquant sur licône Source. La plupart du travail sous R consistera donc à éditer un ou plusieurs fichiers de commandes et à envoyer régulièrement les commandes saisies à R en utilisant les raccourcis clavier ad hoc. 2.1.1 Ajouter des commentaires Un commentaire est une ligne ou une portion de ligne qui sera ignorée par R. Ceci signifie quon peut y écrire ce quon veut et quon va les utiliser pour ajouter tout un tas de commentaires à notre code permettant de décrire les différentes étapes du travail, les choses à se rappeler, les questions en suspens, etc. Un commentaire sous R commence par un ou plusieurs symboles # (qui sobtient avec les touches Alt Gr et 3 sur les claviers de type PC). Tout ce qui suit ce symbole jusquà la fin de la ligne est considéré comme un commentaire. On peut créer une ligne entière de commentaire en la faisant débuter par ##. Par exemple : ## Tableau croisé de la CSP par le nombre de livres lus. ## Attention au nombre de non réponses ! On peut aussi créer des commentaires pour une ligne en cours : x &lt;- 2 # On met 2 dans x, parce qu&#39;il le vaut bien NB:Dans tous les cas, il est très important de documenter ses fichiers R au fur et à mesure, faute de quoi on risque de ne plus y comprendre grand chose si on les reprend ne serait-ce que quelques semaines plus tard. Avec RStudio, vous pouvez également utiliser les commentaires pour créer des sections au sein de votre script et naviguer plus rapidement. Il suffit de faire suivre une ligne de commentaires dau moins 4 signes moins (-). Par exemple, si vous saisissez ceci dans votre script : ## Créer les objets ---- x &lt;- 2 y &lt;- 5 ## Calculs ---- x + y ## [1] 7 Vous verrez apparaître en bas à gauche de la fenêtre du script un symbole dièse orange. Si vous cliquez dessus, un menu de navigation saffichera vous permettant de vous déplacez rapidement au sein de votre script. Note : on remarquera au passage que le titre de longlet est affiché en rouge et suivi dune astérisque (*), nous indiquant ainsi quil y a des modifications non enregistrées dans notre fichier 2.2 Tableaux de données Dans cette partie nous allons utiliser un jeu de données inclus dans lextension questionr. Linstallation dextension est décrite dans le chapitre Extensions. Le jeu de données en question est un extrait de lenquête Histoire de vie réalisée par lINSEE en 2003. Il contient 2000 individus et 20 variables. Pour pouvoir utiliser ces données, il faut dabord charger lextension questionr (après lavoir installée, bien entendu). Le chargement dune extension en mémoire se fait à laide de la fonction library. Sous RStudio, vous pouvez également charger une extension en allant dans longlet Packages du quadrant inférieur droit qui liste lensemble des packages disponibles et en cliquant la case à cocher située à gauche du nom du package désiré. library(questionr) Puis nous allons indiquer à R que nous souhaitons accéder au jeu de données hdv2003 à laide de la fonction data : data(hdv2003) Bien. Et maintenant, elles sont où mes données ? Et bien elles se trouvent dans un objet nommé hdv2003 désormais chargé en mémoire et accessible directement. Dailleurs, cet objet est maintenant visible dans longlet Environment du quadrant supérieur droit. Essayons de taper son nom à linvite de commande : hdv2003 Le résultat (non reproduit ici) ne ressemble pas forcément à grand-chose Il faut se rappeler que par défaut, lorsquon lui fournit seulement un nom dobjet, R essaye de lafficher de la manière la meilleure (ou la moins pire) possible. La réponse à la commande hdv2003 nest donc rien moins que laffichage des données brutes contenues dans cet objet. Ce qui signifie donc que lintégralité de notre jeu de données est inclus dans lobjet nommé hdv2003 ! En effet, dans R, un objet peut très bien contenir un simple nombre, un vecteur ou bien le résultat dune enquête tout entier. Dans ce cas, les objets sont appelés des data frames, ou tableaux de données. Ils peuvent être manipulés comme tout autre objet. Par exemple : Résumons Comme nous avons désormais décidé de saisir nos commandes dans un script et non plus directement dans la console, les premières lignes de notre fichier de travail sur les données de lenquête Histoire de vie pourraient donc ressembler à ceci : ## Chargement des extensions nécessaires ---- library(questionr) ## Jeu de données hdv2003 ---- data(hdv2003) d &lt;- hdv2003 2.2.1 Inspection visuelle des données La particularité de R par rapport à dautres logiciels comme Modalisa ou SPSS est de ne pas proposer, par défaut, de vue des données sous forme de tableau. Ceci peut parfois être un peu déstabilisant dans les premiers temps dutilisation, même si lon perd vite lhabitude et quon finit par se rendre compte que « voir » les données nest pas forcément un gage de productivité ou de rigueur dans le traitement. Néanmoins, R propose une interface permettant de visualiser le contenu dun tableau de données à laide de la fonction View : View(d) Sous RStudio, on peut aussi afficher la visionneusee (viewer) en cliquant sur la petite icône en forme de tableau située à droite de la ligne dun tableau de données dans longlet Environment du quadrant supérieur droit (cf. figure ci-après). Dans tous les cas, RStudio lancera le viewer dans un onglet dédié dans le quadrant supérieur gauche. Le visualiseur de RStudio est plus avancé que celui-de base fournit par R. Il est possible de trier les données selon une variable en cliquant sur le nom de cette dernière. Il y a également un champs de recherche et un bouton Filter donnant accès à des options de filtrage avancées. ### Structure du tableau Avant de travailler sur les données, nous allons essayer de comprendre comment elles sont structurées. Lors de limport de données depuis un autre logiciel (que nous aborderons dans un autre chapitre), il sagira souvent de vérifier que limportation sest bien déroulée. Nous avons déjà vu quun tableau de données est organisé en lignes et en colonnes, les lignes correspondant aux observations et les colonnes aux variables. Les fonctions nrow, ncol et dim donnent respectivement le nombre de lignes, le nombre de colonnes et les dimensions de notre tableau. Nous pouvons donc dores et déjà vérifier que nnombre des lignes nrow(d)#Nombre de lignes: ## [1] 2000 ncol(d)#nombre de colonnes : ## [1] 20 dim(d)# lignes x colonnes ## [1] 2000 20 La fonction names donne les noms des colonnes de notre tableau, cest-à-dire les noms des variables : names(d) ## [1] &quot;id&quot; &quot;age&quot; &quot;sexe&quot; &quot;nivetud&quot; ## [5] &quot;poids&quot; &quot;occup&quot; &quot;qualif&quot; &quot;freres.soeurs&quot; ## [9] &quot;clso&quot; &quot;relig&quot; &quot;trav.imp&quot; &quot;trav.satisf&quot; ## [13] &quot;hard.rock&quot; &quot;lecture.bd&quot; &quot;peche.chasse&quot; &quot;cuisine&quot; ## [17] &quot;bricol&quot; &quot;cinema&quot; &quot;sport&quot; &quot;heures.tv&quot; 2.2.2 Accéder aux variables d représente donc lensemble de notre tableau de données. Nous avons vu que si lon saisit simplement d à linvite de commandes, on obtient un affichage du tableau en question. Mais comment accéder aux variables, cest à dire aux colonnes de notre tableau ? La réponse est simple : on utilise le nom de lobjet, suivi de lopérateur $, suivi du nom de la variable, comme ceci : d$sexe Au regard du résultat (non reproduit ici), on constate alors que R a bien accédé au contenu de notre variable sexe du tableau d et a affiché son contenu, cest-à-dire lensemble des valeurs prises par la variable. Les fonctions head et tail permettent dafficher seulement les premières (respectivement les dernières) valeurs prises par la variable. On peut leur passer en argument le nombre déléments à afficher : head(d$nivetud)# 6 premierès observations ## [1] Enseignement superieur y compris technique superieur ## [2] &lt;NA&gt; ## [3] Derniere annee d&#39;etudes primaires ## [4] Enseignement superieur y compris technique superieur ## [5] Derniere annee d&#39;etudes primaires ## [6] Enseignement technique ou professionnel court ## 8 Levels: N&#39;a jamais fait d&#39;etudes ... tail(d$age, 10)#10 dernières observations ## [1] 52 42 50 41 46 45 46 24 24 66 À noter que ces fonctions marchent aussi pour afficher les lignes du tableau d : head(d,2) ## id age sexe nivetud poids ## 1 1 28 Femme Enseignement superieur y compris technique superieur 2634.398 ## 2 2 23 Femme &lt;NA&gt; 9738.396 ## occup qualif freres.soeurs clso relig ## 1 Exerce une profession Employe 8 Oui Ni croyance ni appartenance ## 2 Etudiant, eleve &lt;NA&gt; 2 Oui Ni croyance ni appartenance ## trav.imp trav.satisf hard.rock lecture.bd peche.chasse cuisine bricol ## 1 Peu important Insatisfaction Non Non Non Oui Non ## 2 &lt;NA&gt; &lt;NA&gt; Non Non Non Non Non ## cinema sport heures.tv ## 1 Non Non 0 ## 2 Oui Oui 1 2.2.3 La fonction str La fonction str est plus complète que names. Elle liste les différentes variables, indique leur type et donne le cas échéant des informations supplémentaires ainsi quun échantillon des premières valeurs prises par cette variable : str(d) ## &#39;data.frame&#39;: 2000 obs. of 20 variables: ## $ id : int 1 2 3 4 5 6 7 8 9 10 ... ## $ age : int 28 23 59 34 71 35 60 47 20 28 ... ## $ sexe : Factor w/ 2 levels &quot;Homme&quot;,&quot;Femme&quot;: 2 2 1 1 2 2 2 1 2 1 ... ## $ nivetud : Factor w/ 8 levels &quot;N&#39;a jamais fait d&#39;etudes&quot;,..: 8 NA 3 8 3 6 3 6 NA 7 ... ## $ poids : num 2634 9738 3994 5732 4329 ... ## $ occup : Factor w/ 7 levels &quot;Exerce une profession&quot;,..: 1 3 1 1 4 1 6 1 3 1 ... ## $ qualif : Factor w/ 7 levels &quot;Ouvrier specialise&quot;,..: 6 NA 3 3 6 6 2 2 NA 7 ... ## $ freres.soeurs: int 8 2 2 1 0 5 1 5 4 2 ... ## $ clso : Factor w/ 3 levels &quot;Oui&quot;,&quot;Non&quot;,&quot;Ne sait pas&quot;: 1 1 2 2 1 2 1 2 1 2 ... ## $ relig : Factor w/ 6 levels &quot;Pratiquant regulier&quot;,..: 4 4 4 3 1 4 3 4 3 2 ... ## $ trav.imp : Factor w/ 4 levels &quot;Le plus important&quot;,..: 4 NA 2 3 NA 1 NA 4 NA 3 ... ## $ trav.satisf : Factor w/ 3 levels &quot;Satisfaction&quot;,..: 2 NA 3 1 NA 3 NA 2 NA 1 ... ## $ hard.rock : Factor w/ 2 levels &quot;Non&quot;,&quot;Oui&quot;: 1 1 1 1 1 1 1 1 1 1 ... ## $ lecture.bd : Factor w/ 2 levels &quot;Non&quot;,&quot;Oui&quot;: 1 1 1 1 1 1 1 1 1 1 ... ## $ peche.chasse : Factor w/ 2 levels &quot;Non&quot;,&quot;Oui&quot;: 1 1 1 1 1 1 2 2 1 1 ... ## $ cuisine : Factor w/ 2 levels &quot;Non&quot;,&quot;Oui&quot;: 2 1 1 2 1 1 2 2 1 1 ... ## $ bricol : Factor w/ 2 levels &quot;Non&quot;,&quot;Oui&quot;: 1 1 1 2 1 1 1 2 1 1 ... ## $ cinema : Factor w/ 2 levels &quot;Non&quot;,&quot;Oui&quot;: 1 2 1 2 1 2 1 1 2 2 ... ## $ sport : Factor w/ 2 levels &quot;Non&quot;,&quot;Oui&quot;: 1 2 2 2 1 2 1 1 1 2 ... ## $ heures.tv : num 0 1 0 2 3 2 2.9 1 2 2 ... La première ligne nous informe quil sagit bien dun tableau de données avec 2000 observations et 20 variables. Vient ensuite la liste des variables. La première se nomme id et est de type entier (int). La seconde se nomme age et est de type numérique. La troisième se nomme sexe, il sagit dun facteur (factor). Un facteur est une variable pouvant prendre un nombre limité de modalités (levels). Ici notre variable a deux modalités possibles : « Homme » et « Femme ». Ce type de variable est décrit plus en détail dans le chapitre sur la manipulation de données. Important La fonction str est essentielle à connaître et peut sappliquer à nimporte quel type dobjet. Cest un excellent moyen de connaître en détail la structure dun objet. Cependant, les résultats peuvent être parfois trop détaillés et on lui priviligiera dans certains cas la fonction describe que lon abordera dans les prochains chapitres, cependant moins générique puisque ne sappliquant quà des tableaux de données et à des vecteurs, tandis que str peut sappliquer à absolument tout objet, y compris des fonctions. describe(d) ## [2000 obs. x 20 variables] tbl_df tbl data.frame ## ## $id: ## integer: 1 2 3 4 5 6 7 8 9 10 ... ## min: 1 - max: 2000 - NAs: 0 (0%) - 2000 unique values ## ## $age: ## integer: 28 23 59 34 71 35 60 47 20 28 ... ## min: 18 - max: 97 - NAs: 0 (0%) - 78 unique values ## ## $sexe: ## nominal factor: &quot;Femme&quot; &quot;Femme&quot; &quot;Homme&quot; &quot;Homme&quot; &quot;Femme&quot; &quot;Femme&quot; &quot;Femme&quot; &quot;Homme&quot; &quot;Femme&quot; &quot;Homme&quot; ... ## 2 levels: Homme | Femme ## NAs: 0 (0%) ## ## $nivetud: ## nominal factor: &quot;Enseignement superieur y compris technique superieur&quot; NA &quot;Derniere annee d&#39;etudes primaires&quot; &quot;Enseignement superieur y compris technique superieur&quot; &quot;Derniere annee d&#39;etudes primaires&quot; &quot;Enseignement technique ou professionnel court&quot; &quot;Derniere annee d&#39;etudes primaires&quot; &quot;Enseignement technique ou professionnel court&quot; NA &quot;Enseignement technique ou professionnel long&quot; ... ## 8 levels: N&#39;a jamais fait d&#39;etudes | A arrete ses etudes, avant la derniere annee d&#39;etudes primaires | Derniere annee d&#39;etudes primaires | 1er cycle | 2eme cycle | Enseignement technique ou professionnel court | Enseignement technique ou professionnel long | Enseignement superieur y compris technique superieur ## NAs: 112 (5.6%) ## ## $poids: ## numeric: 2634.3982157 9738.3957759 3994.1024587 5731.6615081 4329.0940022 8674.6993828 6165.8034861 12891.640759 7808.8720636 2277.160471 ... ## min: 78.0783403 - max: 31092.14132 - NAs: 0 (0%) - 1877 unique values ## ## $occup: ## nominal factor: &quot;Exerce une profession&quot; &quot;Etudiant, eleve&quot; &quot;Exerce une profession&quot; &quot;Exerce une profession&quot; &quot;Retraite&quot; &quot;Exerce une profession&quot; &quot;Au foyer&quot; &quot;Exerce une profession&quot; &quot;Etudiant, eleve&quot; &quot;Exerce une profession&quot; ... ## 7 levels: Exerce une profession | Chomeur | Etudiant, eleve | Retraite | Retire des affaires | Au foyer | Autre inactif ## NAs: 0 (0%) ## ## $qualif: ## nominal factor: &quot;Employe&quot; NA &quot;Technicien&quot; &quot;Technicien&quot; &quot;Employe&quot; &quot;Employe&quot; &quot;Ouvrier qualifie&quot; &quot;Ouvrier qualifie&quot; NA &quot;Autre&quot; ... ## 7 levels: Ouvrier specialise | Ouvrier qualifie | Technicien | Profession intermediaire | Cadre | Employe | Autre ## NAs: 347 (17.3%) ## ## $freres.soeurs: ## integer: 8 2 2 1 0 5 1 5 4 2 ... ## min: 0 - max: 22 - NAs: 0 (0%) - 19 unique values ## ## $clso: ## nominal factor: &quot;Oui&quot; &quot;Oui&quot; &quot;Non&quot; &quot;Non&quot; &quot;Oui&quot; &quot;Non&quot; &quot;Oui&quot; &quot;Non&quot; &quot;Oui&quot; &quot;Non&quot; ... ## 3 levels: Oui | Non | Ne sait pas ## NAs: 0 (0%) ## ## $relig: ## nominal factor: &quot;Ni croyance ni appartenance&quot; &quot;Ni croyance ni appartenance&quot; &quot;Ni croyance ni appartenance&quot; &quot;Appartenance sans pratique&quot; &quot;Pratiquant regulier&quot; &quot;Ni croyance ni appartenance&quot; &quot;Appartenance sans pratique&quot; &quot;Ni croyance ni appartenance&quot; &quot;Appartenance sans pratique&quot; &quot;Pratiquant occasionnel&quot; ... ## 6 levels: Pratiquant regulier | Pratiquant occasionnel | Appartenance sans pratique | Ni croyance ni appartenance | Rejet | NSP ou NVPR ## NAs: 0 (0%) ## ## $trav.imp: ## nominal factor: &quot;Peu important&quot; NA &quot;Aussi important que le reste&quot; &quot;Moins important que le reste&quot; NA &quot;Le plus important&quot; NA &quot;Peu important&quot; NA &quot;Moins important que le reste&quot; ... ## 4 levels: Le plus important | Aussi important que le reste | Moins important que le reste | Peu important ## NAs: 952 (47.6%) ## ## $trav.satisf: ## nominal factor: &quot;Insatisfaction&quot; NA &quot;Equilibre&quot; &quot;Satisfaction&quot; NA &quot;Equilibre&quot; NA &quot;Insatisfaction&quot; NA &quot;Satisfaction&quot; ... ## 3 levels: Satisfaction | Insatisfaction | Equilibre ## NAs: 952 (47.6%) ## ## $hard.rock: ## nominal factor: &quot;Non&quot; &quot;Non&quot; &quot;Non&quot; &quot;Non&quot; &quot;Non&quot; &quot;Non&quot; &quot;Non&quot; &quot;Non&quot; &quot;Non&quot; &quot;Non&quot; ... ## 2 levels: Non | Oui ## NAs: 0 (0%) ## ## $lecture.bd: ## nominal factor: &quot;Non&quot; &quot;Non&quot; &quot;Non&quot; &quot;Non&quot; &quot;Non&quot; &quot;Non&quot; &quot;Non&quot; &quot;Non&quot; &quot;Non&quot; &quot;Non&quot; ... ## 2 levels: Non | Oui ## NAs: 0 (0%) ## ## $peche.chasse: ## nominal factor: &quot;Non&quot; &quot;Non&quot; &quot;Non&quot; &quot;Non&quot; &quot;Non&quot; &quot;Non&quot; &quot;Oui&quot; &quot;Oui&quot; &quot;Non&quot; &quot;Non&quot; ... ## 2 levels: Non | Oui ## NAs: 0 (0%) ## ## $cuisine: ## nominal factor: &quot;Oui&quot; &quot;Non&quot; &quot;Non&quot; &quot;Oui&quot; &quot;Non&quot; &quot;Non&quot; &quot;Oui&quot; &quot;Oui&quot; &quot;Non&quot; &quot;Non&quot; ... ## 2 levels: Non | Oui ## NAs: 0 (0%) ## ## $bricol: ## nominal factor: &quot;Non&quot; &quot;Non&quot; &quot;Non&quot; &quot;Oui&quot; &quot;Non&quot; &quot;Non&quot; &quot;Non&quot; &quot;Oui&quot; &quot;Non&quot; &quot;Non&quot; ... ## 2 levels: Non | Oui ## NAs: 0 (0%) ## ## $cinema: ## nominal factor: &quot;Non&quot; &quot;Oui&quot; &quot;Non&quot; &quot;Oui&quot; &quot;Non&quot; &quot;Oui&quot; &quot;Non&quot; &quot;Non&quot; &quot;Oui&quot; &quot;Oui&quot; ... ## 2 levels: Non | Oui ## NAs: 0 (0%) ## ## $sport: ## nominal factor: &quot;Non&quot; &quot;Oui&quot; &quot;Oui&quot; &quot;Oui&quot; &quot;Non&quot; &quot;Oui&quot; &quot;Non&quot; &quot;Non&quot; &quot;Non&quot; &quot;Oui&quot; ... ## 2 levels: Non | Oui ## NAs: 0 (0%) ## ## $heures.tv: ## numeric: 0 1 0 2 3 2 2.9 1 2 2 ... ## min: 0 - max: 12 - NAs: 5 (0.2%) - 30 unique values 2.2.4 Quelques calculs simples Maintenant que nous savons accéder aux variables, effectuons quelques calculs simples comme la moyenne, la médiane, le minimum et le maximum, à laide des fonctions mean, median, min et max. mean(d$age) ## [1] 48.157 median(d$age) ## [1] 48 min(d$age) ## [1] 18 max(d$age) ## [1] 97 ::: {#hello .greeting .message style=color: red;} Au sens strict, il ne sagit pas dun véritable âge moyen puisquil faudrait ajouter 0,5 à cette valeur calculée, un âge moyen se calculant à partir dâges exacts et non à partir dâges révolus. On peut aussi très facilement obtenir un tri à plat à laide la fonction table : NOTICE! Thank you for noticing this new notice! Your noticing it has been noted, and will be reported to the authorities! "],["references.html", "References", " References "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
